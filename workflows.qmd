## Why Workflow Orchestration

::: {.incremental}

- **Reproducibility**: Ensure your experiments are reproducible by tracking the code, data, model, and environment used in each run.
- **Resource management**: Manage resources efficiently by running tasks in parallel and optimizing resource usage.
- **Scalability**: Scale your workflows to handle large datasets and complex pipelines.
- **Monitoring**: Track the progress of workflows and monitor their performance and results.
- **Collaboration**: Enable collaboration between team members by sharing code, data, and results.

:::


##  Kick-off

![](images/SPACE_logo.png){.absolute top=0 right=0 width=250}

Astrophysical Simulations for Exascale Computing ([SPACE CoE](https://www.space-coe.eu/))

::: {layout='[1,2.2,0.5]' layout-valign=center}
::: n1
![](images/illustris.png)

::: {.small}
::: {.callout-note icon=false}
## Simulation Data (~ PetaBytes)
- Time snapshots storing particle positions, velocities, and other properties
- OpenGADGET (IllustrisTNG), PLUTO, RAMSES, ...
:::
:::
:::

::: n2
![](images/projectx.svg)
:::

::: n3
![](images/P404_f2.png)

::: {.small}
Spherinator & HiPSter

[space.h-its.org](https://space.h-its.org/)
:::
:::
:::
:::{.font-size=30px}
K. L. Polsterer, B. Doser, A. Fehlner and S. Trujillo-Gomez [ADASS (2024)]().
:::

<!-- ![](images/Space-partners-new.png){fig-align="center"} -->


## Example Workflow

![](images/flyte-ui_mnist-workflow.png)


## Workflow Orchestration Management

- General purpose programming languages (e.g Python)
- Domain specific language (e.g. [Common Workflow Language](https://www.commonwl.org/))
- Graphical user interface (e.g. [ReactFlow](https://reactflow.dev/) @ [fal.ai](https://fal.ai/dashboard))
![](images/fal_ai.png){width="1300"}
